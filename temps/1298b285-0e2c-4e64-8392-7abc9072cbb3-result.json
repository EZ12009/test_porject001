{"name": "test_everyday_english[casedata11]", "status": "failed", "statusDetails": {"message": "AssertionError: 返回数据存在异常，打印原数据：{'resultcode': '101', 'reason': '错误的请求KEY!!', 'result': None, 'error_code': 10001}\nassert '错误的请求KEY!!' == 'success'\n  \n  - success\n  + 错误的请求KEY!!", "trace": "self = <project1.test_cases.test_api.Test_imbp_api object at 0x000001C8255139A0>\ncasedata1 = {'feature': '模块2', 'request': {'data': {'key': '4349c53c89f11a97fd7b8071491ba20c'}, 'headers': {'Content-Type': 'appli...rlencoded'}, 'method': 'post', 'url': 'http://apis.juhe.cn/fapigx/everyday/query'}, 'story': '接口', 'title': '验证错误的key'}\n\n    @pytest.mark.parametrize('casedata1',read_testcase_yaml('test_get_everyday_english.yaml'))\n    def test_everyday_english(self,casedata1):\n    \n        url = casedata1.get('request', {}).get('url', None)\n        method = casedata1.get('request', {}).get('method', None)\n        params = casedata1.get('request', {}).get('data', {})\n        headers = casedata1.get('request', {}).get('headers', {})\n        try:\n            # 发起请求\n            res = Requestutil().all_send_request(method=method, url=url,headers=headers,data=params)\n            # 确保请求成功\n            res.raise_for_status()  # 如果返回的状态码不是 200，会引发 HTTPError\n            # 尝试解析 JSON\n            result = res.json()\n            # 检查返回的 JSON 是否包含 'reason' 和 'success'\n>           assert result.get('reason') == 'success', f'返回数据存在异常，打印原数据：{result}'\nE           AssertionError: 返回数据存在异常，打印原数据：{'resultcode': '101', 'reason': '错误的请求KEY!!', 'result': None, 'error_code': 10001}\nE           assert '错误的请求KEY!!' == 'success'\nE             \nE             - success\nE             + 错误的请求KEY!!\n\ntest_cases\\test_api.py:140: AssertionError"}, "parameters": [{"name": "casedata1", "value": "{'feature': '模块2', 'story': '接口', 'title': '验证错误的key', 'request': {'method': 'post', 'url': 'http://apis.juhe.cn/fapigx/everyday/query', 'data': {'key': '4349c53c89f11a97fd7b8071491ba20c'}, 'headers': {'Content-Type': 'application/x-www-form-urlencoded'}}}"}], "start": 1742568336141, "stop": 1742568336213, "uuid": "fce3c37d-e69b-4bb2-82fd-ac11a052f50c", "historyId": "ffadf8baecbf2a9c9149363191d17c06", "testCaseId": "50bc1861ca5666615d839842d78cb66c", "fullName": "test_cases.test_api.Test_imbp_api#test_everyday_english", "labels": [{"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "Test_imbp_api"}, {"name": "host", "value": "LAPTOP-696B6FFF"}, {"name": "thread", "value": "23700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_api"}]}